;; Auto-generated (FF, flat) from Lean subtable: LEFT_MSB_16
(set-logic ALL)
(set-option :incremental true)
(set-option :produce-models true)
(define-sort F () (_ FiniteField 18446744073709551557))

(declare-fun bv1 () (_ BitVec 8))
(declare-fun bv2 () (_ BitVec 8))
(declare-fun bvoutput () (_ BitVec 8))

(declare-fun fv1_0 () F)
(declare-fun sel_fv1_0 () Bool)
(assert (= sel_fv1_0 (= ((_ extract 7 7) bv1) #b1)))
(assert (= fv1_0 (ite sel_fv1_0 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_0 (ff.add fv1_0 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_1 () F)
(declare-fun sel_fv1_1 () Bool)
(assert (= sel_fv1_1 (= ((_ extract 6 6) bv1) #b1)))
(assert (= fv1_1 (ite sel_fv1_1 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_1 (ff.add fv1_1 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_2 () F)
(declare-fun sel_fv1_2 () Bool)
(assert (= sel_fv1_2 (= ((_ extract 5 5) bv1) #b1)))
(assert (= fv1_2 (ite sel_fv1_2 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_2 (ff.add fv1_2 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_3 () F)
(declare-fun sel_fv1_3 () Bool)
(assert (= sel_fv1_3 (= ((_ extract 4 4) bv1) #b1)))
(assert (= fv1_3 (ite sel_fv1_3 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_3 (ff.add fv1_3 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_4 () F)
(declare-fun sel_fv1_4 () Bool)
(assert (= sel_fv1_4 (= ((_ extract 3 3) bv1) #b1)))
(assert (= fv1_4 (ite sel_fv1_4 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_4 (ff.add fv1_4 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_5 () F)
(declare-fun sel_fv1_5 () Bool)
(assert (= sel_fv1_5 (= ((_ extract 2 2) bv1) #b1)))
(assert (= fv1_5 (ite sel_fv1_5 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_5 (ff.add fv1_5 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_6 () F)
(declare-fun sel_fv1_6 () Bool)
(assert (= sel_fv1_6 (= ((_ extract 1 1) bv1) #b1)))
(assert (= fv1_6 (ite sel_fv1_6 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_6 (ff.add fv1_6 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv1_7 () F)
(declare-fun sel_fv1_7 () Bool)
(assert (= sel_fv1_7 (= ((_ extract 0 0) bv1) #b1)))
(assert (= fv1_7 (ite sel_fv1_7 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv1_7 (ff.add fv1_7 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_0 () F)
(declare-fun sel_fv2_0 () Bool)
(assert (= sel_fv2_0 (= ((_ extract 7 7) bv2) #b1)))
(assert (= fv2_0 (ite sel_fv2_0 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_0 (ff.add fv2_0 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_1 () F)
(declare-fun sel_fv2_1 () Bool)
(assert (= sel_fv2_1 (= ((_ extract 6 6) bv2) #b1)))
(assert (= fv2_1 (ite sel_fv2_1 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_1 (ff.add fv2_1 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_2 () F)
(declare-fun sel_fv2_2 () Bool)
(assert (= sel_fv2_2 (= ((_ extract 5 5) bv2) #b1)))
(assert (= fv2_2 (ite sel_fv2_2 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_2 (ff.add fv2_2 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_3 () F)
(declare-fun sel_fv2_3 () Bool)
(assert (= sel_fv2_3 (= ((_ extract 4 4) bv2) #b1)))
(assert (= fv2_3 (ite sel_fv2_3 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_3 (ff.add fv2_3 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_4 () F)
(declare-fun sel_fv2_4 () Bool)
(assert (= sel_fv2_4 (= ((_ extract 3 3) bv2) #b1)))
(assert (= fv2_4 (ite sel_fv2_4 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_4 (ff.add fv2_4 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_5 () F)
(declare-fun sel_fv2_5 () Bool)
(assert (= sel_fv2_5 (= ((_ extract 2 2) bv2) #b1)))
(assert (= fv2_5 (ite sel_fv2_5 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_5 (ff.add fv2_5 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_6 () F)
(declare-fun sel_fv2_6 () Bool)
(assert (= sel_fv2_6 (= ((_ extract 1 1) bv2) #b1)))
(assert (= fv2_6 (ite sel_fv2_6 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_6 (ff.add fv2_6 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun fv2_7 () F)
(declare-fun sel_fv2_7 () Bool)
(assert (= sel_fv2_7 (= ((_ extract 0 0) bv2) #b1)))
(assert (= fv2_7 (ite sel_fv2_7 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul fv2_7 (ff.add fv2_7 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_0 () F)
(declare-fun sel_out_0 () Bool)
(assert (= sel_out_0 (= ((_ extract 0 0) bvoutput) #b1)))
(assert (= out_0 (ite sel_out_0 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_0 (ff.add out_0 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_1 () F)
(declare-fun sel_out_1 () Bool)
(assert (= sel_out_1 (= ((_ extract 1 1) bvoutput) #b1)))
(assert (= out_1 (ite sel_out_1 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_1 (ff.add out_1 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_2 () F)
(declare-fun sel_out_2 () Bool)
(assert (= sel_out_2 (= ((_ extract 2 2) bvoutput) #b1)))
(assert (= out_2 (ite sel_out_2 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_2 (ff.add out_2 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_3 () F)
(declare-fun sel_out_3 () Bool)
(assert (= sel_out_3 (= ((_ extract 3 3) bvoutput) #b1)))
(assert (= out_3 (ite sel_out_3 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_3 (ff.add out_3 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_4 () F)
(declare-fun sel_out_4 () Bool)
(assert (= sel_out_4 (= ((_ extract 4 4) bvoutput) #b1)))
(assert (= out_4 (ite sel_out_4 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_4 (ff.add out_4 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_5 () F)
(declare-fun sel_out_5 () Bool)
(assert (= sel_out_5 (= ((_ extract 5 5) bvoutput) #b1)))
(assert (= out_5 (ite sel_out_5 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_5 (ff.add out_5 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_6 () F)
(declare-fun sel_out_6 () Bool)
(assert (= sel_out_6 (= ((_ extract 6 6) bvoutput) #b1)))
(assert (= out_6 (ite sel_out_6 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_6 (ff.add out_6 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun out_7 () F)
(declare-fun sel_out_7 () Bool)
(assert (= sel_out_7 (= ((_ extract 7 7) bvoutput) #b1)))
(assert (= out_7 (ite sel_out_7 (as ff1 F) (as ff0 F))))
(assert (= (ff.mul out_7 (ff.add out_7 (as ff18446744073709551556 F))) (as ff0 F)))
(declare-fun foutput () F)

(define-fun poly_inputs () F fv1_0)
(define-fun poly_bvout () F (ff.add (ff.add (ff.add (ff.add (ff.add (ff.add (ff.add (ff.mul (as ff1 F) out_0) (ff.mul (as ff2 F) out_1)) (ff.mul (as ff4 F) out_2)) (ff.mul (as ff8 F) out_3)) (ff.mul (as ff16 F) out_4)) (ff.mul (as ff32 F) out_5)) (ff.mul (as ff64 F) out_6)) (ff.mul (as ff128 F) out_7)))
(assert (= foutput poly_bvout))
(assert (= foutput poly_inputs))
(assert
  (not (= bvoutput
     ((_ zero_extend 7) ((_ extract 7 7) bv1)))))

(check-sat)
(get-model)
